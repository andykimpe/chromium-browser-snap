Description: do not build unused clang tools
Author: Olivier Tilloy <olivier.tilloy@canonical.com>

--- a/tools/clang/scripts/build.py
+++ b/tools/clang/scripts/build.py
@@ -476,7 +476,7 @@ def main():
 
   # Build lld and code coverage tools. This is done separately from the rest of
   # the build because these tools require threading support.
-  tools_with_threading = [ 'dsymutil', 'lld', 'llvm-cov', 'llvm-profdata' ]
+  tools_with_threading = [ 'lld' ]
   print('Building the following tools with threading support: %s' %
         str(tools_with_threading))
 
@@ -593,11 +593,6 @@ def main():
       compiler_rt_args += ['-DLLVM_CONFIG_PATH=' +
                            os.path.join(LLVM_BUILD_DIR, 'bin', 'llvm-config'),
                           ]
-    RmCmakeCache('.')
-    RunCommand(['cmake'] + compiler_rt_args +
-               [LLVM_DIR if sys.platform == 'win32' else COMPILER_RT_DIR],
-               msvc_arch='x86', env=deployment_env)
-    RunCommand(['ninja', 'compiler-rt'], msvc_arch='x86')
 
     # Copy select output to the main tree.
     # TODO(hans): Make this (and the .gypi and .isolate files) version number
@@ -608,17 +603,6 @@ def main():
       # on Windows, see TODO above COMPILER_RT_DIR.
       rt_lib_src_dir = os.path.join(COMPILER_RT_BUILD_DIR, 'lib', 'clang',
                                     RELEASE_VERSION, 'lib', platform)
-    # Blacklists:
-    CopyDirectoryContents(os.path.join(rt_lib_src_dir, '..', '..', 'share'),
-                          os.path.join(rt_lib_dst_dir, '..', '..', 'share'))
-    # Headers:
-    if sys.platform != 'win32':
-      CopyDirectoryContents(
-          os.path.join(COMPILER_RT_BUILD_DIR, 'include/sanitizer'),
-          os.path.join(LLVM_BUILD_DIR, 'lib/clang', RELEASE_VERSION,
-                       'include/sanitizer'))
-    # Static and dynamic libraries:
-    CopyDirectoryContents(rt_lib_src_dir, rt_lib_dst_dir)
 
   if args.with_android:
     make_toolchain = os.path.join(

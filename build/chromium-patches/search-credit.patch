Description: Add Ubuntu id into search queries to get credit.
Author: Chad Miller <chad.miller@canonical.com>

--- a/components/search_engines/prepopulated_engines.json
+++ b/components/search_engines/prepopulated_engines.json
@@ -48,7 +48,7 @@
       "name": "\u767e\u5ea6",
       "keyword": "baidu.com",
       "favicon_url": "https://www.baidu.com/favicon.ico",
-      "search_url": "https://www.baidu.com/#ie={inputEncoding}&wd={searchTerms}",
+      "search_url": "https://www.baidu.com/#ie={inputEncoding}&tn=ubuntuu_cb&wd={searchTerms}",
       "alternate_urls": [
         "https://www.baidu.com/s?ie={inputEncoding}&wd={searchTerms}",
         "https://www.baidu.com/s?ie={inputEncoding}&word={searchTerms}",
@@ -95,7 +95,7 @@
       "name": "DuckDuckGo",
       "keyword": "duckduckgo.com",
       "favicon_url": "https://duckduckgo.com/favicon.ico",
-      "search_url": "https://duckduckgo.com/?q={searchTerms}",
+      "search_url": "https://duckduckgo.com/?q={searchTerms}&t=canonical",
       "suggest_url": "https://duckduckgo.com/ac/?q={searchTerms}&type=list",
       "new_tab_url": "https://duckduckgo.com/chrome_newtab",
       "type": "SEARCH_ENGINE_DUCKDUCKGO",
--- a/components/search_engines/template_url.cc
+++ b/components/search_engines/template_url.cc
@@ -995,6 +995,9 @@ std::string TemplateURLRef::HandleReplac
 
   std::string url = parsed_url_;
 
+  bool is_google_search = false;
+  bool ubuntu_credit_for_search = false;
+
   // replacements_ is ordered in ascending order, as such we need to iterate
   // from the back.
   for (const Replacement& replacement : base::Reversed(replacements_)) {
@@ -1113,6 +1116,7 @@ std::string TemplateURLRef::HandleReplac
 
       case GOOGLE_BASE_URL:
         DCHECK(!replacement.is_post_param);
+        is_google_search = true;
         HandleReplacement(std::string(), search_terms_data.GoogleBaseURLValue(),
                           replacement, &url);
         break;
@@ -1239,7 +1243,8 @@ std::string TemplateURLRef::HandleReplac
 
       case GOOGLE_SEARCH_CLIENT: {
         DCHECK(!replacement.is_post_param);
-        std::string client = search_terms_data.GetSearchClient();
+        ubuntu_credit_for_search = true;
+        std::string client = "ubuntu";
         if (!client.empty())
           HandleReplacement("client", client, replacement, &url);
         break;
@@ -1371,6 +1376,13 @@ std::string TemplateURLRef::HandleReplac
     }
   }
 
+  /* Google search template from prefs might not have a client token. */
+  if (is_google_search && !ubuntu_credit_for_search) {
+    if (url.find_first_of('?', 8) != std::string::npos) {  // perhaps no GET params
+      url.append("&client=ubuntu");
+    }
+  }
+
   if (!post_params_.empty())
     EncodeFormData(post_params_, post_content);
 

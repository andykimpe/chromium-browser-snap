From a8336c1e58efb1fe6ee813025252cae0a24b06ae Mon Sep 17 00:00:00 2001
From: Michael Achenbach <machenbach@chromium.org>
Date: Wed, 19 May 2021 16:39:39 +0000
Subject: [PATCH] Revert "use python3 in devtools-frontend by default"

This reverts commit 37c0bf698dac52793c1c6c9ecd3b6c0335a804d1.

Reason for revert:
Compatibility issues with python 3.6.

Original change's description:
> use python3 in devtools-frontend by default
>
> Fixed: 1205624, 1205625
> Change-Id: Iddaf2a49bffd92140d1877784ffd9f5dd83ac3de
> Reviewed-on: https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2902988
> Auto-Submit: Takuto Ikuta <tikuta@chromium.org>
> Commit-Queue: Takuto Ikuta <tikuta@chromium.org>
> Reviewed-by: Michael Achenbach <machenbach@chromium.org>
> Reviewed-by: Tim van der Lippe <tvanderlippe@chromium.org>

Change-Id: Ic426154f58798dd8631f9bac101521f0b25ea54c
Reviewed-on: https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2906060
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Commit-Queue: Michael Achenbach <machenbach@chromium.org>
---

diff --git a/third_party/devtools-frontend/src/BUILD.gn b/third_party/devtools-frontend/src/BUILD.gn
index 2c07ca8..dfce359 100644
--- a/third_party/devtools-frontend/src/BUILD.gn
+++ b/third_party/devtools-frontend/src/BUILD.gn
@@ -2,6 +2,8 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/python.gni")
+
 import("./config/gni/all_devtools_files.gni")
 import("./config/gni/devtools_grd_files.gni")
 import("./config/gni/devtools_image_files.gni")
@@ -245,7 +247,8 @@
   build_release_devtools_args += [ "--rollup" ]
 }
 
-action("build_release_devtools") {
+# TODO(crbug.com/1112471): Get this to work cleanly under Python3.
+python2_action("build_release_devtools") {
   script = "scripts/build/build_release_applications.py"
 
   helper_scripts = [
diff --git a/third_party/devtools-frontend/src/inspector_overlay/BUILD.gn b/third_party/devtools-frontend/src/inspector_overlay/BUILD.gn
index 109aa82..e7364dc 100644
--- a/third_party/devtools-frontend/src/inspector_overlay/BUILD.gn
+++ b/third_party/devtools-frontend/src/inspector_overlay/BUILD.gn
@@ -2,11 +2,13 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/python.gni")
 import("../third_party/typescript/typescript.gni")
 
 resources_out_dir = "$root_out_dir/resources/inspector_overlay"
 
-action("build_inspector_overlay") {
+# TODO(crbug.com/1112471): Get this to work under Python 3.
+python2_action("build_inspector_overlay") {
   script = "../scripts/build/build_inspector_overlay.py"
 
   inputs = [
diff --git a/third_party/devtools-frontend/src/scripts/build/build_inspector_overlay.py b/third_party/devtools-frontend/src/scripts/build/build_inspector_overlay.py
index cb5c3bd..64f1c49 100644
--- a/third_party/devtools-frontend/src/scripts/build/build_inspector_overlay.py
+++ b/third_party/devtools-frontend/src/scripts/build/build_inspector_overlay.py
@@ -1,5 +1,5 @@
 #!/usr/bin/env vpython
-# -*- coding: utf-8 -*-
+# -*- coding: UTF-8 -*-
 #
 # Copyright 2020 The Chromium Authors. All rights reserved.
 # Use of this source code is governed by a BSD-style license that can be
@@ -44,8 +44,7 @@
         ['--format', 'iife', '-n', 'InspectorOverlay'] + ['--input', target] +
         ['--plugin', rollup_plugin, '--plugin', 'terser'],
         stdout=subprocess.PIPE,
-        stderr=subprocess.PIPE,
-        text=True)
+        stderr=subprocess.PIPE)
     out, error = rollup_process.communicate()
     if not out:
         raise Exception("rollup failed: " + error)
diff --git a/third_party/devtools-frontend/src/scripts/build/build_release_applications.py b/third_party/devtools-frontend/src/scripts/build/build_release_applications.py
index 88079a8..531e567 100644
--- a/third_party/devtools-frontend/src/scripts/build/build_release_applications.py
+++ b/third_party/devtools-frontend/src/scripts/build/build_release_applications.py
@@ -1,5 +1,5 @@
 #!/usr/bin/env vpython
-# -*- coding: utf-8 -*-
+# -*- coding: UTF-8 -*-
 #
 # Copyright 2016 The Chromium Authors. All rights reserved.
 # Use of this source code is governed by a BSD-style license that can be
@@ -10,7 +10,7 @@
 and the application loader into a single script.
 """
 
-from io import StringIO
+from cStringIO import StringIO
 from os import path
 from os.path import join
 import copy
@@ -152,7 +152,8 @@
             resource_content = read_file(path.join(self.application_dir, resource_name))
             if not (resource_name.endswith('.html')
                     or resource_name.endswith('md')):
-                resource_content += resource_source_url(resource_name)
+                resource_content += resource_source_url(resource_name).encode(
+                    'utf-8')
             resource_content = resource_content.replace('\\', '\\\\')
             resource_content = resource_content.replace('\n', '\\n')
             resource_content = resource_content.replace('"', '\\"')
@@ -178,9 +179,7 @@
     def _concatenate_application_script(self, output):
         output.write('Root.allDescriptors.push(...%s);' % self._release_module_descriptors())
         if self.descriptors.extends:
-            output.write(
-                'Root.applicationDescriptor.modules.push(...%s);' %
-                json.dumps(list(self.descriptors.application.values())))
+            output.write('Root.applicationDescriptor.modules.push(...%s);' % json.dumps(self.descriptors.application.values()))
         else:
             output.write('Root.applicationDescriptor = %s;' % self.descriptors.application_json())
 
diff --git a/third_party/devtools-frontend/src/scripts/build/modular_build.py b/third_party/devtools-frontend/src/scripts/build/modular_build.py
index 2f8e204..9018db2 100644
--- a/third_party/devtools-frontend/src/scripts/build/modular_build.py
+++ b/third_party/devtools-frontend/src/scripts/build/modular_build.py
@@ -59,7 +59,7 @@
 
     def application_json(self):
         result = dict()
-        result['modules'] = list(self.application.values())
+        result['modules'] = self.application.values()
         return json.dumps(result)
 
     def module_resources(self, name):

#!/bin/sh

# When running the snap for the first time, try and locate an existing chromium
# config in $HOME/.config/chromium, and import it if it was created by an older
# version of chromium (the profile data format is not guaranteed to be
# forward-compatible). This requires the personal-files plug to be connected.
if [ ! -d "$HOME/.config/chromium" ]; then
  REALHOME=$(getent passwd $(id -u) | cut -d ':' -f 6)
  CHROMIUM_CONFIG="$REALHOME/.config/chromium"
  if [ -d "$CHROMIUM_CONFIG" ]; then
    PREF_FILE="$CHROMIUM_CONFIG/Default/Preferences"
    if [ -r "$PREF_FILE" ]; then
      VERSION=$(sed -e 's/.*"last_chrome_version":"\([0-9\.]\+\)".*/\1/' "$PREF_FILE")
      if [ ! -z "$VERSION" ]; then
        OLD=$(printf "$VERSION\n$SNAP_VERSION" | sort -V | head -1)
        if [ "$OLD" = "$VERSION" ]; then
          SIZE=$(du -sb $CHROMIUM_CONFIG | cut -f 1)
          AVAILABLE_BLOCKS=$(stat -f -c %a $HOME)
          BLOCK_SIZE=$(stat -f -c %s $HOME)
          AVAILABLE_SIZE=$(($AVAILABLE_BLOCKS*$BLOCK_SIZE))
          if [ $AVAILABLE_SIZE -gt $SIZE ]; then
            printf "Importing existing chromium profile from $CHROMIUM_CONFIG (version $VERSION)\n"
            TS1=$(date +%s.%3N)
            cp -R "$CHROMIUM_CONFIG" "$HOME/.config/"
            TS2=$(date +%s.%3N)
            T=$(printf "$TS1 $TS2" | awk '{printf "%.3f",$2-$1}')
            printf "Import done in $T s\n"
          else
            printf "Not importing existing chromium profile from $CHROMIUM_CONFIG (version $VERSION) "
            printf "because there is not enough available space in $HOME "
            printf "(required: $SIZE bytes / available: $AVAILABLE_SIZE bytes)\n"
          fi
        fi
      fi
    fi
  fi
fi

# Specify that no encrypted password store (keyring) should be used when the
# password-manager-service interface is not plugged, because Chromium won't
# fall back to the basic store (no encryption) if it fails to talk to the
# default password store for the current desktop environment.
# Ref: https://launchpad.net/bugs/1763829
PASSWORD_STORE= # an empty string means detect the store based on the current DE (os_crypt::SelectBackend())
dbus-send --session --dest=org.freedesktop.secrets /org/freedesktop/secrets --print-reply org.freedesktop.DBus.Properties.GetAll string:'org.freedesktop.Secret.Service' >/dev/null 2>&1
if [ "$?" -ne "0" ]; then
  PASSWORD_STORE=basic
fi

# Allow chromium to look for the flash player plugin inside the snap's
# confinement. That .so file has to be extracted from the upstream flash
# distribution (https://get.adobe.com/flashplayer/) and copied there.
# Ref: https://launchpad.net/bugs/1771162
FLASHSO=$SNAP_USER_DATA/.local/lib/libpepflashplayer.so
if [ -e $FLASHSO ]; then
  FLASHVERSION=$(strings $FLASHSO 2> /dev/null | grep LNX | cut -d ' ' -f 2 | sed -e "s/,/./g")
  FLASH_OPTIONS="--ppapi-flash-path=$FLASHSO --ppapi-flash-version=$FLASHVERSION"
fi

# Custom version string for chrome://version
export CHROME_VERSION_EXTRA=snap

exec "$SNAP/usr/lib/chromium-browser/chrome" --no-default-browser-check --no-first-run --password-store=$PASSWORD_STORE "$FLASH_OPTIONS" "$@"
